***************
*** 5,10 ****
  #include <linux/ext2_fs.h>
  #include <linux/romfs_fs.h>
  #include <linux/cramfs_fs.h>
  #include <linux/initrd.h>
  #include <linux/string.h>
  
--- 5,11 ----
  #include <linux/ext2_fs.h>
  #include <linux/romfs_fs.h>
  #include <linux/cramfs_fs.h>
+ #include <linux/squashfs_fs.h>
  #include <linux/initrd.h>
  #include <linux/string.h>
  
***************
*** 39,44 ****
   * numbers could not be found.
   *
   * We currently check for the following magic numbers:
   * 	minix
   * 	ext2
   *	romfs
--- 40,46 ----
   * numbers could not be found.
   *
   * We currently check for the following magic numbers:
+  *      squashfs
   * 	minix
   * 	ext2
   *	romfs
***************
*** 53,58 ****
  	struct ext2_super_block *ext2sb;
  	struct romfs_super_block *romfsb;
  	struct cramfs_super *cramfsb;
  	int nblocks = -1;
  	unsigned char *buf;
  
--- 55,61 ----
  	struct ext2_super_block *ext2sb;
  	struct romfs_super_block *romfsb;
  	struct cramfs_super *cramfsb;
+ 	struct squashfs_super_block *squashfsb;
  	int nblocks = -1;
  	unsigned char *buf;
  
***************
*** 64,69 ****
  	ext2sb = (struct ext2_super_block *) buf;
  	romfsb = (struct romfs_super_block *) buf;
  	cramfsb = (struct cramfs_super *) buf;
  	memset(buf, 0xe5, size);
  
  	/*
--- 67,73 ----
  	ext2sb = (struct ext2_super_block *) buf;
  	romfsb = (struct romfs_super_block *) buf;
  	cramfsb = (struct cramfs_super *) buf;
+ 	squashfsb = (struct squashfs_super_block *) buf;
  	memset(buf, 0xe5, size);
  
  	/*
***************
*** 101,106 ****
  		goto done;
  	}
  
  	/*
  	 * Read block 1 to test for minix and ext2 superblock
  	 */
--- 105,122 ----
  		goto done;
  	}
  
+ 	/* squashfs is at block zero too */
+ 	if (squashfsb->s_magic == SQUASHFS_MAGIC) {
+ 		printk(KERN_NOTICE
+ 		       "RAMDISK: squashfs filesystem found at block %d\n",
+ 		       start_block);
+ 		if (squashfsb->s_major < 3)
+ 			nblocks = (squashfsb->bytes_used_2+BLOCK_SIZE-1)>>BLOCK_SIZE_BITS;
+ 		else
+ 			nblocks = (squashfsb->bytes_used+BLOCK_SIZE-1)>>BLOCK_SIZE_BITS;
+ 		goto done;
+ 	}
+ 
  	/*
  	 * Read block 1 to test for minix and ext2 superblock
  	 */
